<api
  api-source="class-parse">
  <package
    name="com.cossacklabs.themis"
    jni-name="com/cossacklabs/themis">
    <class
      abstract="true"
      deprecated="not deprecated"
      jni-extends="Lcom/cossacklabs/themis/KeyBytes;"
      extends="com.cossacklabs.themis.KeyBytes"
      extends-generic-aware="com.cossacklabs.themis.KeyBytes"
      final="false"
      name="AsymmetricKey"
      jni-signature="Lcom/cossacklabs/themis/AsymmetricKey;"
      source-file-name="AsymmetricKey.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="AsymmetricKey"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([B)V">
        <parameter
          name="key"
          type="byte[]"
          jni-type="[B" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="toByteArray"
        native="false"
        return="byte[]"
        jni-return="[B"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="true"
        synthetic="true"
        jni-signature="()[B" />
      <field
        deprecated="not deprecated"
        final="true"
        name="KEYTYPE_EC"
        static="true"
        synthetic="false"
        transient="false"
        type="int"
        type-generic-aware="int"
        jni-signature="I"
        value="0"
        visibility="public"
        volatile="false" />
      <field
        deprecated="not deprecated"
        final="true"
        name="KEYTYPE_RSA"
        static="true"
        synthetic="false"
        transient="false"
        type="int"
        type-generic-aware="int"
        jni-signature="I"
        value="1"
        visibility="public"
        volatile="false" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="BuildConfig"
      jni-signature="Lcom/cossacklabs/themis/BuildConfig;"
      source-file-name="BuildConfig.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="BuildConfig"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
      <field
        deprecated="not deprecated"
        final="true"
        name="APPLICATION_ID"
        static="true"
        synthetic="false"
        transient="false"
        type="java.lang.String"
        type-generic-aware="java.lang.String"
        jni-signature="Ljava/lang/String;"
        value="&quot;com.cossacklabs.themis&quot;"
        visibility="public"
        volatile="false" />
      <field
        deprecated="not deprecated"
        final="true"
        name="BUILD_TYPE"
        static="true"
        synthetic="false"
        transient="false"
        type="java.lang.String"
        type-generic-aware="java.lang.String"
        jni-signature="Ljava/lang/String;"
        value="&quot;release&quot;"
        visibility="public"
        volatile="false" />
      <field
        deprecated="not deprecated"
        final="true"
        name="DEBUG"
        static="true"
        synthetic="false"
        transient="false"
        type="boolean"
        type-generic-aware="boolean"
        jni-signature="Z"
        value="false"
        visibility="public"
        volatile="false" />
      <field
        deprecated="not deprecated"
        final="true"
        name="FLAVOR"
        static="true"
        synthetic="false"
        transient="false"
        type="java.lang.String"
        type-generic-aware="java.lang.String"
        jni-signature="Ljava/lang/String;"
        value="&quot;&quot;"
        visibility="public"
        volatile="false" />
      <field
        deprecated="not deprecated"
        final="true"
        name="VERSION_CODE"
        static="true"
        synthetic="false"
        transient="false"
        type="int"
        type-generic-aware="int"
        jni-signature="I"
        value="1"
        visibility="public"
        volatile="false" />
      <field
        deprecated="not deprecated"
        final="true"
        name="VERSION_NAME"
        static="true"
        synthetic="false"
        transient="false"
        type="java.lang.String"
        type-generic-aware="java.lang.String"
        jni-signature="Ljava/lang/String;"
        value="&quot;0.14.0&quot;"
        visibility="public"
        volatile="false" />
    </class>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="IKey"
      jni-signature="Lcom/cossacklabs/themis/IKey;"
      source-file-name="IKey.java"
      static="false"
      visibility="public">
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="toByteArray"
        native="false"
        return="byte[]"
        jni-return="[B"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()[B" />
    </interface>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/IllegalArgumentException;"
      extends="java.lang.IllegalArgumentException"
      extends-generic-aware="java.lang.IllegalArgumentException"
      final="false"
      name="InvalidArgumentException"
      jni-signature="Lcom/cossacklabs/themis/InvalidArgumentException;"
      source-file-name="InvalidArgumentException.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="InvalidArgumentException"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/String;)V">
        <parameter
          name="message"
          type="java.lang.String"
          jni-type="Ljava/lang/String;" />
      </constructor>
    </class>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="ISessionCallbacks"
      jni-signature="Lcom/cossacklabs/themis/ISessionCallbacks;"
      source-file-name="ISessionCallbacks.java"
      static="false"
      visibility="public">
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="getPublicKeyForId"
        native="false"
        return="com.cossacklabs.themis.PublicKey"
        jni-return="Lcom/cossacklabs/themis/PublicKey;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/cossacklabs/themis/SecureSession;[B)Lcom/cossacklabs/themis/PublicKey;">
        <parameter
          name="p0"
          type="com.cossacklabs.themis.SecureSession"
          jni-type="Lcom/cossacklabs/themis/SecureSession;" />
        <parameter
          name="p1"
          type="byte[]"
          jni-type="[B" />
      </method>
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="stateChanged"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/cossacklabs/themis/SecureSession;)V">
        <parameter
          name="p0"
          type="com.cossacklabs.themis.SecureSession"
          jni-type="Lcom/cossacklabs/themis/SecureSession;" />
      </method>
    </interface>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="ITransportSessionCallbacks"
      jni-signature="Lcom/cossacklabs/themis/ITransportSessionCallbacks;"
      source-file-name="ITransportSessionCallbacks.java"
      static="false"
      visibility="public">
      <implements
        name="com.cossacklabs.themis.ISessionCallbacks"
        name-generic-aware="com.cossacklabs.themis.ISessionCallbacks"
        jni-type="Lcom/cossacklabs/themis/ISessionCallbacks;" />
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="read"
        native="false"
        return="byte[]"
        jni-return="[B"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()[B" />
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="write"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([B)V">
        <parameter
          name="p0"
          type="byte[]"
          jni-type="[B" />
      </method>
    </interface>
    <class
      abstract="true"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="KeyBytes"
      jni-signature="Lcom/cossacklabs/themis/KeyBytes;"
      source-file-name="KeyBytes.java"
      static="false"
      visibility="">
      <implements
        name="com.cossacklabs.themis.IKey"
        name-generic-aware="com.cossacklabs.themis.IKey"
        jni-type="Lcom/cossacklabs/themis/IKey;" />
      <constructor
        deprecated="not deprecated"
        final="false"
        name="KeyBytes"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([B)V">
        <parameter
          name="key"
          type="byte[]"
          jni-type="[B" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="toByteArray"
        native="false"
        return="byte[]"
        jni-return="[B"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()[B" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/RuntimeException;"
      extends="java.lang.RuntimeException"
      extends-generic-aware="java.lang.RuntimeException"
      final="false"
      name="KeyGenerationException"
      jni-signature="Lcom/cossacklabs/themis/KeyGenerationException;"
      source-file-name="KeyGenerationException.java"
      static="false"
      visibility="public" />
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="Keypair"
      jni-signature="Lcom/cossacklabs/themis/Keypair;"
      source-file-name="Keypair.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="Keypair"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/cossacklabs/themis/PrivateKey;Lcom/cossacklabs/themis/PublicKey;)V">
        <parameter
          name="privateKey"
          type="com.cossacklabs.themis.PrivateKey"
          jni-type="Lcom/cossacklabs/themis/PrivateKey;" />
        <parameter
          name="publicKey"
          type="com.cossacklabs.themis.PublicKey"
          jni-type="Lcom/cossacklabs/themis/PublicKey;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="getPrivateKey"
        native="false"
        return="com.cossacklabs.themis.PrivateKey"
        jni-return="Lcom/cossacklabs/themis/PrivateKey;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/cossacklabs/themis/PrivateKey;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="getPublicKey"
        native="false"
        return="com.cossacklabs.themis.PublicKey"
        jni-return="Lcom/cossacklabs/themis/PublicKey;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/cossacklabs/themis/PublicKey;" />
    </class>
    <class
      abstract="true"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="KeypairGenerator"
      jni-signature="Lcom/cossacklabs/themis/KeypairGenerator;"
      source-file-name="KeypairGenerator.java"
      static="false"
      visibility="public">
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="generateKeypair"
        native="false"
        return="com.cossacklabs.themis.Keypair"
        jni-return="Lcom/cossacklabs/themis/Keypair;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/cossacklabs/themis/Keypair;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="generateKeypair"
        native="false"
        return="com.cossacklabs.themis.Keypair"
        jni-return="Lcom/cossacklabs/themis/Keypair;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(I)Lcom/cossacklabs/themis/Keypair;">
        <parameter
          name="keyType"
          type="int"
          jni-type="I" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/NullPointerException;"
      extends="java.lang.NullPointerException"
      extends-generic-aware="java.lang.NullPointerException"
      final="false"
      name="NullArgumentException"
      jni-signature="Lcom/cossacklabs/themis/NullArgumentException;"
      source-file-name="NullArgumentException.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="NullArgumentException"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
      <constructor
        deprecated="not deprecated"
        final="false"
        name="NullArgumentException"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/String;)V">
        <parameter
          name="message"
          type="java.lang.String"
          jni-type="Ljava/lang/String;" />
      </constructor>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/cossacklabs/themis/KeyBytes;"
      extends="com.cossacklabs.themis.KeyBytes"
      extends-generic-aware="com.cossacklabs.themis.KeyBytes"
      final="false"
      name="PassphraseBytes"
      jni-signature="Lcom/cossacklabs/themis/PassphraseBytes;"
      source-file-name="PassphraseBytes.java"
      static="false"
      visibility="" />
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/cossacklabs/themis/AsymmetricKey;"
      extends="com.cossacklabs.themis.AsymmetricKey"
      extends-generic-aware="com.cossacklabs.themis.AsymmetricKey"
      final="false"
      name="PrivateKey"
      jni-signature="Lcom/cossacklabs/themis/PrivateKey;"
      source-file-name="PrivateKey.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="PrivateKey"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([B)V">
        <parameter
          name="key"
          type="byte[]"
          jni-type="[B" />
      </constructor>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/cossacklabs/themis/AsymmetricKey;"
      extends="com.cossacklabs.themis.AsymmetricKey"
      extends-generic-aware="com.cossacklabs.themis.AsymmetricKey"
      final="false"
      name="PublicKey"
      jni-signature="Lcom/cossacklabs/themis/PublicKey;"
      source-file-name="PublicKey.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="PublicKey"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([B)V">
        <parameter
          name="key"
          type="byte[]"
          jni-type="[B" />
      </constructor>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="SecureCell"
      jni-signature="Lcom/cossacklabs/themis/SecureCell;"
      source-file-name="SecureCell.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="deprecated"
        final="false"
        name="SecureCell"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(I)V">
        <parameter
          name="mode"
          type="int"
          jni-type="I" />
      </constructor>
      <constructor
        deprecated="deprecated"
        final="false"
        name="SecureCell"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/String;)V">
        <parameter
          name="password"
          type="java.lang.String"
          jni-type="Ljava/lang/String;" />
      </constructor>
      <constructor
        deprecated="deprecated"
        final="false"
        name="SecureCell"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/String;I)V">
        <parameter
          name="password"
          type="java.lang.String"
          jni-type="Ljava/lang/String;" />
        <parameter
          name="mode"
          type="int"
          jni-type="I" />
      </constructor>
      <constructor
        deprecated="deprecated"
        final="false"
        name="SecureCell"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([B)V">
        <parameter
          name="key"
          type="byte[]"
          jni-type="[B" />
      </constructor>
      <constructor
        deprecated="deprecated"
        final="false"
        name="SecureCell"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([BI)V">
        <parameter
          name="key"
          type="byte[]"
          jni-type="[B" />
        <parameter
          name="mode"
          type="int"
          jni-type="I" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="ContextImprintWithKey"
        native="false"
        return="com.cossacklabs.themis.SecureCell.ContextImprint"
        jni-return="Lcom/cossacklabs/themis/SecureCell$ContextImprint;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/cossacklabs/themis/SymmetricKey;)Lcom/cossacklabs/themis/SecureCell$ContextImprint;"
        return-not-null="true">
        <parameter
          name="key"
          type="com.cossacklabs.themis.SymmetricKey"
          jni-type="Lcom/cossacklabs/themis/SymmetricKey;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="ContextImprintWithKey"
        native="false"
        return="com.cossacklabs.themis.SecureCell.ContextImprint"
        jni-return="Lcom/cossacklabs/themis/SecureCell$ContextImprint;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([B)Lcom/cossacklabs/themis/SecureCell$ContextImprint;"
        return-not-null="true">
        <parameter
          name="key"
          type="byte[]"
          jni-type="[B" />
      </method>
      <method
        abstract="false"
        deprecated="deprecated"
        final="false"
        name="protect"
        native="false"
        return="com.cossacklabs.themis.SecureCellData"
        jni-return="Lcom/cossacklabs/themis/SecureCellData;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/String;Ljava/lang/String;[B)Lcom/cossacklabs/themis/SecureCellData;">
        <parameter
          name="password"
          type="java.lang.String"
          jni-type="Ljava/lang/String;" />
        <parameter
          name="context"
          type="java.lang.String"
          jni-type="Ljava/lang/String;" />
        <parameter
          name="data"
          type="byte[]"
          jni-type="[B" />
        <exception
          name="com/cossacklabs/themis/SecureCellException"
          type="com.cossacklabs.themis.SecureCellException"
          type-generic-aware="com.cossacklabs.themis.SecureCellException" />
      </method>
      <method
        abstract="false"
        deprecated="deprecated"
        final="false"
        name="protect"
        native="false"
        return="com.cossacklabs.themis.SecureCellData"
        jni-return="Lcom/cossacklabs/themis/SecureCellData;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/String;[B)Lcom/cossacklabs/themis/SecureCellData;">
        <parameter
          name="context"
          type="java.lang.String"
          jni-type="Ljava/lang/String;" />
        <parameter
          name="data"
          type="byte[]"
          jni-type="[B" />
        <exception
          name="com/cossacklabs/themis/SecureCellException"
          type="com.cossacklabs.themis.SecureCellException"
          type-generic-aware="com.cossacklabs.themis.SecureCellException" />
      </method>
      <method
        abstract="false"
        deprecated="deprecated"
        final="false"
        name="protect"
        native="false"
        return="com.cossacklabs.themis.SecureCellData"
        jni-return="Lcom/cossacklabs/themis/SecureCellData;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([B[B)Lcom/cossacklabs/themis/SecureCellData;">
        <parameter
          name="context"
          type="byte[]"
          jni-type="[B" />
        <parameter
          name="data"
          type="byte[]"
          jni-type="[B" />
        <exception
          name="com/cossacklabs/themis/SecureCellException"
          type="com.cossacklabs.themis.SecureCellException"
          type-generic-aware="com.cossacklabs.themis.SecureCellException" />
      </method>
      <method
        abstract="false"
        deprecated="deprecated"
        final="false"
        name="protect"
        native="false"
        return="com.cossacklabs.themis.SecureCellData"
        jni-return="Lcom/cossacklabs/themis/SecureCellData;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([B[B[B)Lcom/cossacklabs/themis/SecureCellData;">
        <parameter
          name="key"
          type="byte[]"
          jni-type="[B" />
        <parameter
          name="context"
          type="byte[]"
          jni-type="[B" />
        <parameter
          name="data"
          type="byte[]"
          jni-type="[B" />
        <exception
          name="com/cossacklabs/themis/SecureCellException"
          type="com.cossacklabs.themis.SecureCellException"
          type-generic-aware="com.cossacklabs.themis.SecureCellException" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="SealWithKey"
        native="false"
        return="com.cossacklabs.themis.SecureCell.Seal"
        jni-return="Lcom/cossacklabs/themis/SecureCell$Seal;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/cossacklabs/themis/SymmetricKey;)Lcom/cossacklabs/themis/SecureCell$Seal;"
        return-not-null="true">
        <parameter
          name="key"
          type="com.cossacklabs.themis.SymmetricKey"
          jni-type="Lcom/cossacklabs/themis/SymmetricKey;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="SealWithKey"
        native="false"
        return="com.cossacklabs.themis.SecureCell.Seal"
        jni-return="Lcom/cossacklabs/themis/SecureCell$Seal;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([B)Lcom/cossacklabs/themis/SecureCell$Seal;"
        return-not-null="true">
        <parameter
          name="key"
          type="byte[]"
          jni-type="[B" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="SealWithPassphrase"
        native="false"
        return="com.cossacklabs.themis.SecureCell.Seal"
        jni-return="Lcom/cossacklabs/themis/SecureCell$Seal;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/String;)Lcom/cossacklabs/themis/SecureCell$Seal;"
        return-not-null="true">
        <parameter
          name="passphrase"
          type="java.lang.String"
          jni-type="Ljava/lang/String;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="SealWithPassphrase"
        native="false"
        return="com.cossacklabs.themis.SecureCell.Seal"
        jni-return="Lcom/cossacklabs/themis/SecureCell$Seal;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/String;Ljava/nio/charset/Charset;)Lcom/cossacklabs/themis/SecureCell$Seal;"
        return-not-null="true">
        <parameter
          name="passphrase"
          type="java.lang.String"
          jni-type="Ljava/lang/String;" />
        <parameter
          name="charset"
          type="java.nio.charset.Charset"
          jni-type="Ljava/nio/charset/Charset;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="SealWithPassphrase"
        native="false"
        return="com.cossacklabs.themis.SecureCell.Seal"
        jni-return="Lcom/cossacklabs/themis/SecureCell$Seal;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([B)Lcom/cossacklabs/themis/SecureCell$Seal;"
        return-not-null="true">
        <parameter
          name="encodedPassphrase"
          type="byte[]"
          jni-type="[B" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="TokenProtectWithKey"
        native="false"
        return="com.cossacklabs.themis.SecureCell.TokenProtect"
        jni-return="Lcom/cossacklabs/themis/SecureCell$TokenProtect;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/cossacklabs/themis/SymmetricKey;)Lcom/cossacklabs/themis/SecureCell$TokenProtect;"
        return-not-null="true">
        <parameter
          name="key"
          type="com.cossacklabs.themis.SymmetricKey"
          jni-type="Lcom/cossacklabs/themis/SymmetricKey;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="TokenProtectWithKey"
        native="false"
        return="com.cossacklabs.themis.SecureCell.TokenProtect"
        jni-return="Lcom/cossacklabs/themis/SecureCell$TokenProtect;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([B)Lcom/cossacklabs/themis/SecureCell$TokenProtect;"
        return-not-null="true">
        <parameter
          name="key"
          type="byte[]"
          jni-type="[B" />
      </method>
      <method
        abstract="false"
        deprecated="deprecated"
        final="false"
        name="unprotect"
        native="false"
        return="byte[]"
        jni-return="[B"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/String;Lcom/cossacklabs/themis/SecureCellData;)[B">
        <parameter
          name="context"
          type="java.lang.String"
          jni-type="Ljava/lang/String;" />
        <parameter
          name="protectedData"
          type="com.cossacklabs.themis.SecureCellData"
          jni-type="Lcom/cossacklabs/themis/SecureCellData;" />
        <exception
          name="com/cossacklabs/themis/SecureCellException"
          type="com.cossacklabs.themis.SecureCellException"
          type-generic-aware="com.cossacklabs.themis.SecureCellException" />
      </method>
      <method
        abstract="false"
        deprecated="deprecated"
        final="false"
        name="unprotect"
        native="false"
        return="byte[]"
        jni-return="[B"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/String;Ljava/lang/String;Lcom/cossacklabs/themis/SecureCellData;)[B">
        <parameter
          name="password"
          type="java.lang.String"
          jni-type="Ljava/lang/String;" />
        <parameter
          name="context"
          type="java.lang.String"
          jni-type="Ljava/lang/String;" />
        <parameter
          name="protectedData"
          type="com.cossacklabs.themis.SecureCellData"
          jni-type="Lcom/cossacklabs/themis/SecureCellData;" />
        <exception
          name="com/cossacklabs/themis/SecureCellException"
          type="com.cossacklabs.themis.SecureCellException"
          type-generic-aware="com.cossacklabs.themis.SecureCellException" />
      </method>
      <method
        abstract="false"
        deprecated="deprecated"
        final="false"
        name="unprotect"
        native="false"
        return="byte[]"
        jni-return="[B"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([BLcom/cossacklabs/themis/SecureCellData;)[B">
        <parameter
          name="context"
          type="byte[]"
          jni-type="[B" />
        <parameter
          name="protectedData"
          type="com.cossacklabs.themis.SecureCellData"
          jni-type="Lcom/cossacklabs/themis/SecureCellData;" />
        <exception
          name="com/cossacklabs/themis/SecureCellException"
          type="com.cossacklabs.themis.SecureCellException"
          type-generic-aware="com.cossacklabs.themis.SecureCellException" />
      </method>
      <method
        abstract="false"
        deprecated="deprecated"
        final="false"
        name="unprotect"
        native="false"
        return="byte[]"
        jni-return="[B"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([B[BLcom/cossacklabs/themis/SecureCellData;)[B">
        <parameter
          name="key"
          type="byte[]"
          jni-type="[B" />
        <parameter
          name="context"
          type="byte[]"
          jni-type="[B" />
        <parameter
          name="protectedData"
          type="com.cossacklabs.themis.SecureCellData"
          jni-type="Lcom/cossacklabs/themis/SecureCellData;" />
        <exception
          name="com/cossacklabs/themis/SecureCellException"
          type="com.cossacklabs.themis.SecureCellException"
          type-generic-aware="com.cossacklabs.themis.SecureCellException" />
      </method>
      <field
        deprecated="deprecated"
        final="true"
        name="MODE_CONTEXT_IMPRINT"
        static="true"
        synthetic="false"
        transient="false"
        type="int"
        type-generic-aware="int"
        jni-signature="I"
        value="2"
        visibility="public"
        volatile="false" />
      <field
        deprecated="deprecated"
        final="true"
        name="MODE_SEAL"
        static="true"
        synthetic="false"
        transient="false"
        type="int"
        type-generic-aware="int"
        jni-signature="I"
        value="0"
        visibility="public"
        volatile="false" />
      <field
        deprecated="deprecated"
        final="true"
        name="MODE_TOKEN_PROTECT"
        static="true"
        synthetic="false"
        transient="false"
        type="int"
        type-generic-aware="int"
        jni-signature="I"
        value="1"
        visibility="public"
        volatile="false" />
    </class>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="SecureCell.ContextImprint"
      jni-signature="Lcom/cossacklabs/themis/SecureCell$ContextImprint;"
      source-file-name="SecureCell.java"
      static="true"
      visibility="public">
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="decrypt"
        native="false"
        return="byte[]"
        jni-return="[B"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([B[B)[B"
        return-not-null="true">
        <parameter
          name="p0"
          type="byte[]"
          jni-type="[B" />
        <parameter
          name="p1"
          type="byte[]"
          jni-type="[B" />
      </method>
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="encrypt"
        native="false"
        return="byte[]"
        jni-return="[B"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([B[B)[B"
        return-not-null="true">
        <parameter
          name="p0"
          type="byte[]"
          jni-type="[B" />
        <parameter
          name="p1"
          type="byte[]"
          jni-type="[B" />
      </method>
    </interface>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="SecureCell.Seal"
      jni-signature="Lcom/cossacklabs/themis/SecureCell$Seal;"
      source-file-name="SecureCell.java"
      static="true"
      visibility="public">
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="decrypt"
        native="false"
        return="byte[]"
        jni-return="[B"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([B)[B"
        return-not-null="true">
        <parameter
          name="p0"
          type="byte[]"
          jni-type="[B" />
        <exception
          name="com/cossacklabs/themis/SecureCellException"
          type="com.cossacklabs.themis.SecureCellException"
          type-generic-aware="com.cossacklabs.themis.SecureCellException" />
      </method>
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="decrypt"
        native="false"
        return="byte[]"
        jni-return="[B"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([B[B)[B"
        return-not-null="true">
        <parameter
          name="p0"
          type="byte[]"
          jni-type="[B" />
        <parameter
          name="p1"
          type="byte[]"
          jni-type="[B" />
        <exception
          name="com/cossacklabs/themis/SecureCellException"
          type="com.cossacklabs.themis.SecureCellException"
          type-generic-aware="com.cossacklabs.themis.SecureCellException" />
      </method>
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="encrypt"
        native="false"
        return="byte[]"
        jni-return="[B"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([B)[B"
        return-not-null="true">
        <parameter
          name="p0"
          type="byte[]"
          jni-type="[B" />
      </method>
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="encrypt"
        native="false"
        return="byte[]"
        jni-return="[B"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([B[B)[B"
        return-not-null="true">
        <parameter
          name="p0"
          type="byte[]"
          jni-type="[B" />
        <parameter
          name="p1"
          type="byte[]"
          jni-type="[B" />
      </method>
    </interface>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="SecureCell.TokenProtect"
      jni-signature="Lcom/cossacklabs/themis/SecureCell$TokenProtect;"
      source-file-name="SecureCell.java"
      static="true"
      visibility="public">
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="decrypt"
        native="false"
        return="byte[]"
        jni-return="[B"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([B[B)[B"
        return-not-null="true">
        <parameter
          name="p0"
          type="byte[]"
          jni-type="[B" />
        <parameter
          name="p1"
          type="byte[]"
          jni-type="[B" />
        <exception
          name="com/cossacklabs/themis/SecureCellException"
          type="com.cossacklabs.themis.SecureCellException"
          type-generic-aware="com.cossacklabs.themis.SecureCellException" />
      </method>
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="decrypt"
        native="false"
        return="byte[]"
        jni-return="[B"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([B[B[B)[B"
        return-not-null="true">
        <parameter
          name="p0"
          type="byte[]"
          jni-type="[B" />
        <parameter
          name="p1"
          type="byte[]"
          jni-type="[B" />
        <parameter
          name="p2"
          type="byte[]"
          jni-type="[B" />
        <exception
          name="com/cossacklabs/themis/SecureCellException"
          type="com.cossacklabs.themis.SecureCellException"
          type-generic-aware="com.cossacklabs.themis.SecureCellException" />
      </method>
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="encrypt"
        native="false"
        return="com.cossacklabs.themis.SecureCellData"
        jni-return="Lcom/cossacklabs/themis/SecureCellData;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([B)Lcom/cossacklabs/themis/SecureCellData;"
        return-not-null="true">
        <parameter
          name="p0"
          type="byte[]"
          jni-type="[B" />
      </method>
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="encrypt"
        native="false"
        return="com.cossacklabs.themis.SecureCellData"
        jni-return="Lcom/cossacklabs/themis/SecureCellData;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([B[B)Lcom/cossacklabs/themis/SecureCellData;"
        return-not-null="true">
        <parameter
          name="p0"
          type="byte[]"
          jni-type="[B" />
        <parameter
          name="p1"
          type="byte[]"
          jni-type="[B" />
      </method>
    </interface>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="SecureCellContextImprint"
      jni-signature="Lcom/cossacklabs/themis/SecureCellContextImprint;"
      source-file-name="SecureCellContextImprint.java"
      static="false"
      visibility="">
      <implements
        name="com.cossacklabs.themis.SecureCell.ContextImprint"
        name-generic-aware="com.cossacklabs.themis.SecureCell.ContextImprint"
        jni-type="Lcom/cossacklabs/themis/SecureCell$ContextImprint;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="decrypt"
        native="false"
        return="byte[]"
        jni-return="[B"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([B[B)[B"
        return-not-null="true">
        <parameter
          name="data"
          type="byte[]"
          jni-type="[B" />
        <parameter
          name="context"
          type="byte[]"
          jni-type="[B" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="encrypt"
        native="false"
        return="byte[]"
        jni-return="[B"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([B[B)[B"
        return-not-null="true">
        <parameter
          name="data"
          type="byte[]"
          jni-type="[B" />
        <parameter
          name="context"
          type="byte[]"
          jni-type="[B" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="SecureCellData"
      jni-signature="Lcom/cossacklabs/themis/SecureCellData;"
      source-file-name="SecureCellData.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="SecureCellData"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([B[B)V">
        <parameter
          name="protectedData"
          type="byte[]"
          jni-type="[B" />
        <parameter
          name="additionalData"
          type="byte[]"
          jni-type="[B" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="component1"
        native="false"
        return="byte[]"
        jni-return="[B"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()[B"
        return-not-null="true" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="component2"
        native="false"
        return="byte[]"
        jni-return="[B"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()[B"
        return-not-null="true" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="getAdditionalData"
        native="false"
        return="byte[]"
        jni-return="[B"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()[B" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="getProtectedData"
        native="false"
        return="byte[]"
        jni-return="[B"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()[B" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasAdditionalData"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Exception;"
      extends="java.lang.Exception"
      extends-generic-aware="java.lang.Exception"
      final="false"
      name="SecureCellException"
      jni-signature="Lcom/cossacklabs/themis/SecureCellException;"
      source-file-name="SecureCellException.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="SecureCellException"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="SecureCellSeal"
      jni-signature="Lcom/cossacklabs/themis/SecureCellSeal;"
      source-file-name="SecureCellSeal.java"
      static="false"
      visibility="">
      <implements
        name="com.cossacklabs.themis.SecureCell.Seal"
        name-generic-aware="com.cossacklabs.themis.SecureCell.Seal"
        jni-type="Lcom/cossacklabs/themis/SecureCell$Seal;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="decrypt"
        native="false"
        return="byte[]"
        jni-return="[B"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([B)[B"
        return-not-null="true">
        <parameter
          name="data"
          type="byte[]"
          jni-type="[B" />
        <exception
          name="com/cossacklabs/themis/SecureCellException"
          type="com.cossacklabs.themis.SecureCellException"
          type-generic-aware="com.cossacklabs.themis.SecureCellException" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="decrypt"
        native="false"
        return="byte[]"
        jni-return="[B"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([B[B)[B"
        return-not-null="true">
        <parameter
          name="data"
          type="byte[]"
          jni-type="[B" />
        <parameter
          name="context"
          type="byte[]"
          jni-type="[B" />
        <exception
          name="com/cossacklabs/themis/SecureCellException"
          type="com.cossacklabs.themis.SecureCellException"
          type-generic-aware="com.cossacklabs.themis.SecureCellException" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="encrypt"
        native="false"
        return="byte[]"
        jni-return="[B"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([B)[B"
        return-not-null="true">
        <parameter
          name="data"
          type="byte[]"
          jni-type="[B" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="encrypt"
        native="false"
        return="byte[]"
        jni-return="[B"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([B[B)[B"
        return-not-null="true">
        <parameter
          name="data"
          type="byte[]"
          jni-type="[B" />
        <parameter
          name="context"
          type="byte[]"
          jni-type="[B" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="SecureCellSealWithPassphrase"
      jni-signature="Lcom/cossacklabs/themis/SecureCellSealWithPassphrase;"
      source-file-name="SecureCellSealWithPassphrase.java"
      static="false"
      visibility="">
      <implements
        name="com.cossacklabs.themis.SecureCell.Seal"
        name-generic-aware="com.cossacklabs.themis.SecureCell.Seal"
        jni-type="Lcom/cossacklabs/themis/SecureCell$Seal;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="decrypt"
        native="false"
        return="byte[]"
        jni-return="[B"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([B)[B"
        return-not-null="true">
        <parameter
          name="data"
          type="byte[]"
          jni-type="[B" />
        <exception
          name="com/cossacklabs/themis/SecureCellException"
          type="com.cossacklabs.themis.SecureCellException"
          type-generic-aware="com.cossacklabs.themis.SecureCellException" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="decrypt"
        native="false"
        return="byte[]"
        jni-return="[B"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([B[B)[B"
        return-not-null="true">
        <parameter
          name="data"
          type="byte[]"
          jni-type="[B" />
        <parameter
          name="context"
          type="byte[]"
          jni-type="[B" />
        <exception
          name="com/cossacklabs/themis/SecureCellException"
          type="com.cossacklabs.themis.SecureCellException"
          type-generic-aware="com.cossacklabs.themis.SecureCellException" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="encrypt"
        native="false"
        return="byte[]"
        jni-return="[B"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([B)[B"
        return-not-null="true">
        <parameter
          name="data"
          type="byte[]"
          jni-type="[B" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="encrypt"
        native="false"
        return="byte[]"
        jni-return="[B"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([B[B)[B"
        return-not-null="true">
        <parameter
          name="data"
          type="byte[]"
          jni-type="[B" />
        <parameter
          name="context"
          type="byte[]"
          jni-type="[B" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="SecureCellTokenProtect"
      jni-signature="Lcom/cossacklabs/themis/SecureCellTokenProtect;"
      source-file-name="SecureCellTokenProtect.java"
      static="false"
      visibility="">
      <implements
        name="com.cossacklabs.themis.SecureCell.TokenProtect"
        name-generic-aware="com.cossacklabs.themis.SecureCell.TokenProtect"
        jni-type="Lcom/cossacklabs/themis/SecureCell$TokenProtect;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="decrypt"
        native="false"
        return="byte[]"
        jni-return="[B"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([B[B)[B"
        return-not-null="true">
        <parameter
          name="data"
          type="byte[]"
          jni-type="[B" />
        <parameter
          name="token"
          type="byte[]"
          jni-type="[B" />
        <exception
          name="com/cossacklabs/themis/SecureCellException"
          type="com.cossacklabs.themis.SecureCellException"
          type-generic-aware="com.cossacklabs.themis.SecureCellException" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="decrypt"
        native="false"
        return="byte[]"
        jni-return="[B"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([B[B[B)[B"
        return-not-null="true">
        <parameter
          name="data"
          type="byte[]"
          jni-type="[B" />
        <parameter
          name="token"
          type="byte[]"
          jni-type="[B" />
        <parameter
          name="context"
          type="byte[]"
          jni-type="[B" />
        <exception
          name="com/cossacklabs/themis/SecureCellException"
          type="com.cossacklabs.themis.SecureCellException"
          type-generic-aware="com.cossacklabs.themis.SecureCellException" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="encrypt"
        native="false"
        return="com.cossacklabs.themis.SecureCellData"
        jni-return="Lcom/cossacklabs/themis/SecureCellData;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([B)Lcom/cossacklabs/themis/SecureCellData;"
        return-not-null="true">
        <parameter
          name="data"
          type="byte[]"
          jni-type="[B" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="encrypt"
        native="false"
        return="com.cossacklabs.themis.SecureCellData"
        jni-return="Lcom/cossacklabs/themis/SecureCellData;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([B[B)Lcom/cossacklabs/themis/SecureCellData;"
        return-not-null="true">
        <parameter
          name="data"
          type="byte[]"
          jni-type="[B" />
        <parameter
          name="context"
          type="byte[]"
          jni-type="[B" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="SecureCompare"
      jni-signature="Lcom/cossacklabs/themis/SecureCompare;"
      source-file-name="SecureCompare.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="SecureCompare"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
      <constructor
        deprecated="not deprecated"
        final="false"
        name="SecureCompare"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/String;)V">
        <parameter
          name="password"
          type="java.lang.String"
          jni-type="Ljava/lang/String;" />
      </constructor>
      <constructor
        deprecated="not deprecated"
        final="false"
        name="SecureCompare"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([B)V">
        <parameter
          name="secret"
          type="byte[]"
          jni-type="[B" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="appendSecret"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([B)V">
        <parameter
          name="secretData"
          type="byte[]"
          jni-type="[B" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="begin"
        native="false"
        return="byte[]"
        jni-return="[B"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()[B" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="close"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="finalize"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="protected"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="getResult"
        native="false"
        return="com.cossacklabs.themis.SecureCompare.CompareResult"
        jni-return="Lcom/cossacklabs/themis/SecureCompare$CompareResult;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/cossacklabs/themis/SecureCompare$CompareResult;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="proceed"
        native="false"
        return="byte[]"
        jni-return="[B"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([B)[B">
        <parameter
          name="compareData"
          type="byte[]"
          jni-type="[B" />
        <exception
          name="com/cossacklabs/themis/SecureCompareException"
          type="com.cossacklabs.themis.SecureCompareException"
          type-generic-aware="com.cossacklabs.themis.SecureCompareException" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Enum;"
      extends="java.lang.Enum"
      extends-generic-aware="java.lang.Enum&lt;com.cossacklabs.themis.SecureCompare.CompareResult&gt;"
      final="true"
      name="SecureCompare.CompareResult"
      jni-signature="Lcom/cossacklabs/themis/SecureCompare$CompareResult;"
      source-file-name="SecureCompare.java"
      static="true"
      visibility="public">
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="valueOf"
        native="false"
        return="com.cossacklabs.themis.SecureCompare.CompareResult"
        jni-return="Lcom/cossacklabs/themis/SecureCompare$CompareResult;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/String;)Lcom/cossacklabs/themis/SecureCompare$CompareResult;">
        <parameter
          name="name"
          type="java.lang.String"
          jni-type="Ljava/lang/String;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="values"
        native="false"
        return="com.cossacklabs.themis.SecureCompare.CompareResult[]"
        jni-return="[Lcom/cossacklabs/themis/SecureCompare$CompareResult;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()[Lcom/cossacklabs/themis/SecureCompare$CompareResult;" />
      <field
        deprecated="not deprecated"
        final="true"
        name="MATCH"
        static="true"
        synthetic="false"
        transient="false"
        type="com.cossacklabs.themis.SecureCompare.CompareResult"
        type-generic-aware="com.cossacklabs.themis.SecureCompare.CompareResult"
        jni-signature="Lcom/cossacklabs/themis/SecureCompare$CompareResult;"
        visibility="public"
        volatile="false" />
      <field
        deprecated="not deprecated"
        final="true"
        name="NOT_READY"
        static="true"
        synthetic="false"
        transient="false"
        type="com.cossacklabs.themis.SecureCompare.CompareResult"
        type-generic-aware="com.cossacklabs.themis.SecureCompare.CompareResult"
        jni-signature="Lcom/cossacklabs/themis/SecureCompare$CompareResult;"
        visibility="public"
        volatile="false" />
      <field
        deprecated="not deprecated"
        final="true"
        name="NO_MATCH"
        static="true"
        synthetic="false"
        transient="false"
        type="com.cossacklabs.themis.SecureCompare.CompareResult"
        type-generic-aware="com.cossacklabs.themis.SecureCompare.CompareResult"
        jni-signature="Lcom/cossacklabs/themis/SecureCompare$CompareResult;"
        visibility="public"
        volatile="false" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Enum;"
      extends="java.lang.Enum"
      extends-generic-aware="java.lang.Enum&lt;com.cossacklabs.themis.SecureCompare.ProtocolResult&gt;"
      final="true"
      name="SecureCompare.ProtocolResult"
      jni-signature="Lcom/cossacklabs/themis/SecureCompare$ProtocolResult;"
      source-file-name="SecureCompare.java"
      static="true"
      visibility="public">
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="valueOf"
        native="false"
        return="com.cossacklabs.themis.SecureCompare.ProtocolResult"
        jni-return="Lcom/cossacklabs/themis/SecureCompare$ProtocolResult;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/String;)Lcom/cossacklabs/themis/SecureCompare$ProtocolResult;">
        <parameter
          name="name"
          type="java.lang.String"
          jni-type="Ljava/lang/String;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="values"
        native="false"
        return="com.cossacklabs.themis.SecureCompare.ProtocolResult[]"
        jni-return="[Lcom/cossacklabs/themis/SecureCompare$ProtocolResult;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()[Lcom/cossacklabs/themis/SecureCompare$ProtocolResult;" />
      <field
        deprecated="not deprecated"
        final="true"
        name="NO_OUTPUT"
        static="true"
        synthetic="false"
        transient="false"
        type="com.cossacklabs.themis.SecureCompare.ProtocolResult"
        type-generic-aware="com.cossacklabs.themis.SecureCompare.ProtocolResult"
        jni-signature="Lcom/cossacklabs/themis/SecureCompare$ProtocolResult;"
        visibility="public"
        volatile="false" />
      <field
        deprecated="not deprecated"
        final="true"
        name="SEND_TO_PEER"
        static="true"
        synthetic="false"
        transient="false"
        type="com.cossacklabs.themis.SecureCompare.ProtocolResult"
        type-generic-aware="com.cossacklabs.themis.SecureCompare.ProtocolResult"
        jni-signature="Lcom/cossacklabs/themis/SecureCompare$ProtocolResult;"
        visibility="public"
        volatile="false" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Exception;"
      extends="java.lang.Exception"
      extends-generic-aware="java.lang.Exception"
      final="false"
      name="SecureCompareException"
      jni-signature="Lcom/cossacklabs/themis/SecureCompareException;"
      source-file-name="SecureCompareException.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="SecureCompareException"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="SecureMessage"
      jni-signature="Lcom/cossacklabs/themis/SecureMessage;"
      source-file-name="SecureMessage.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="SecureMessage"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/cossacklabs/themis/PrivateKey;)V">
        <parameter
          name="privateKey"
          type="com.cossacklabs.themis.PrivateKey"
          jni-type="Lcom/cossacklabs/themis/PrivateKey;" />
      </constructor>
      <constructor
        deprecated="not deprecated"
        final="false"
        name="SecureMessage"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/cossacklabs/themis/PrivateKey;Lcom/cossacklabs/themis/PublicKey;)V">
        <parameter
          name="privateKey"
          type="com.cossacklabs.themis.PrivateKey"
          jni-type="Lcom/cossacklabs/themis/PrivateKey;" />
        <parameter
          name="peerPublicKey"
          type="com.cossacklabs.themis.PublicKey"
          jni-type="Lcom/cossacklabs/themis/PublicKey;" />
      </constructor>
      <constructor
        deprecated="not deprecated"
        final="false"
        name="SecureMessage"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/cossacklabs/themis/PublicKey;)V">
        <parameter
          name="peerPublicKey"
          type="com.cossacklabs.themis.PublicKey"
          jni-type="Lcom/cossacklabs/themis/PublicKey;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="sign"
        native="false"
        return="byte[]"
        jni-return="[B"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([B)[B">
        <parameter
          name="message"
          type="byte[]"
          jni-type="[B" />
        <exception
          name="com/cossacklabs/themis/SecureMessageWrapException"
          type="com.cossacklabs.themis.SecureMessageWrapException"
          type-generic-aware="com.cossacklabs.themis.SecureMessageWrapException" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="unwrap"
        native="false"
        return="byte[]"
        jni-return="[B"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([B)[B">
        <parameter
          name="message"
          type="byte[]"
          jni-type="[B" />
        <exception
          name="com/cossacklabs/themis/SecureMessageWrapException"
          type="com.cossacklabs.themis.SecureMessageWrapException"
          type-generic-aware="com.cossacklabs.themis.SecureMessageWrapException" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="unwrap"
        native="false"
        return="byte[]"
        jni-return="[B"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([BLcom/cossacklabs/themis/PublicKey;)[B">
        <parameter
          name="message"
          type="byte[]"
          jni-type="[B" />
        <parameter
          name="peerPublicKey"
          type="com.cossacklabs.themis.PublicKey"
          jni-type="Lcom/cossacklabs/themis/PublicKey;" />
        <exception
          name="com/cossacklabs/themis/SecureMessageWrapException"
          type="com.cossacklabs.themis.SecureMessageWrapException"
          type-generic-aware="com.cossacklabs.themis.SecureMessageWrapException" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="verify"
        native="false"
        return="byte[]"
        jni-return="[B"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([B)[B">
        <parameter
          name="message"
          type="byte[]"
          jni-type="[B" />
        <exception
          name="com/cossacklabs/themis/SecureMessageWrapException"
          type="com.cossacklabs.themis.SecureMessageWrapException"
          type-generic-aware="com.cossacklabs.themis.SecureMessageWrapException" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="verify"
        native="false"
        return="byte[]"
        jni-return="[B"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([BLcom/cossacklabs/themis/PublicKey;)[B">
        <parameter
          name="message"
          type="byte[]"
          jni-type="[B" />
        <parameter
          name="peerPublicKey"
          type="com.cossacklabs.themis.PublicKey"
          jni-type="Lcom/cossacklabs/themis/PublicKey;" />
        <exception
          name="com/cossacklabs/themis/SecureMessageWrapException"
          type="com.cossacklabs.themis.SecureMessageWrapException"
          type-generic-aware="com.cossacklabs.themis.SecureMessageWrapException" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="wrap"
        native="false"
        return="byte[]"
        jni-return="[B"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([B)[B">
        <parameter
          name="message"
          type="byte[]"
          jni-type="[B" />
        <exception
          name="com/cossacklabs/themis/SecureMessageWrapException"
          type="com.cossacklabs.themis.SecureMessageWrapException"
          type-generic-aware="com.cossacklabs.themis.SecureMessageWrapException" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="wrap"
        native="false"
        return="byte[]"
        jni-return="[B"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([BLcom/cossacklabs/themis/PublicKey;)[B">
        <parameter
          name="message"
          type="byte[]"
          jni-type="[B" />
        <parameter
          name="peerPublicKey"
          type="com.cossacklabs.themis.PublicKey"
          jni-type="Lcom/cossacklabs/themis/PublicKey;" />
        <exception
          name="com/cossacklabs/themis/SecureMessageWrapException"
          type="com.cossacklabs.themis.SecureMessageWrapException"
          type-generic-aware="com.cossacklabs.themis.SecureMessageWrapException" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Exception;"
      extends="java.lang.Exception"
      extends-generic-aware="java.lang.Exception"
      final="false"
      name="SecureMessageWrapException"
      jni-signature="Lcom/cossacklabs/themis/SecureMessageWrapException;"
      source-file-name="SecureMessageWrapException.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="SecureMessageWrapException"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/net/ServerSocket;"
      extends="java.net.ServerSocket"
      extends-generic-aware="java.net.ServerSocket"
      final="false"
      name="SecureServerSocket"
      jni-signature="Lcom/cossacklabs/themis/SecureServerSocket;"
      source-file-name="SecureServerSocket.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="SecureServerSocket"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(I[BLcom/cossacklabs/themis/PrivateKey;Lcom/cossacklabs/themis/ISessionCallbacks;)V">
        <parameter
          name="port"
          type="int"
          jni-type="I" />
        <parameter
          name="id"
          type="byte[]"
          jni-type="[B" />
        <parameter
          name="signPrivateKey"
          type="com.cossacklabs.themis.PrivateKey"
          jni-type="Lcom/cossacklabs/themis/PrivateKey;" />
        <parameter
          name="callbacks"
          type="com.cossacklabs.themis.ISessionCallbacks"
          jni-type="Lcom/cossacklabs/themis/ISessionCallbacks;" />
        <exception
          name="java/io/IOException"
          type="java.io.IOException"
          type-generic-aware="java.io.IOException" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="java.net.Socket"
        jni-return="Ljava/net/Socket;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Ljava/net/Socket;">
        <exception
          name="java/io/IOException"
          type="java.io.IOException"
          type-generic-aware="java.io.IOException" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="SecureSession"
      jni-signature="Lcom/cossacklabs/themis/SecureSession;"
      source-file-name="SecureSession.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="SecureSession"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/String;Lcom/cossacklabs/themis/PrivateKey;Lcom/cossacklabs/themis/ISessionCallbacks;)V">
        <parameter
          name="id"
          type="java.lang.String"
          jni-type="Ljava/lang/String;" />
        <parameter
          name="signPrivateKey"
          type="com.cossacklabs.themis.PrivateKey"
          jni-type="Lcom/cossacklabs/themis/PrivateKey;" />
        <parameter
          name="callbacks"
          type="com.cossacklabs.themis.ISessionCallbacks"
          jni-type="Lcom/cossacklabs/themis/ISessionCallbacks;" />
      </constructor>
      <constructor
        deprecated="not deprecated"
        final="false"
        name="SecureSession"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([BLcom/cossacklabs/themis/PrivateKey;Lcom/cossacklabs/themis/ISessionCallbacks;)V">
        <parameter
          name="id"
          type="byte[]"
          jni-type="[B" />
        <parameter
          name="signPrivateKey"
          type="com.cossacklabs.themis.PrivateKey"
          jni-type="Lcom/cossacklabs/themis/PrivateKey;" />
        <parameter
          name="callbacks"
          type="com.cossacklabs.themis.ISessionCallbacks"
          jni-type="Lcom/cossacklabs/themis/ISessionCallbacks;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="close"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="finalize"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="protected"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="generateConnectRequest"
        native="false"
        return="byte[]"
        jni-return="[B"
        static="false"
        synchronized="true"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()[B" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="getState"
        native="false"
        return="com.cossacklabs.themis.SecureSession.State"
        jni-return="Lcom/cossacklabs/themis/SecureSession$State;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/cossacklabs/themis/SecureSession$State;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="isEstablished"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="true"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="deprecated"
        final="false"
        name="restore"
        native="false"
        return="com.cossacklabs.themis.SecureSession"
        jni-return="Lcom/cossacklabs/themis/SecureSession;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([BLcom/cossacklabs/themis/ISessionCallbacks;)Lcom/cossacklabs/themis/SecureSession;">
        <parameter
          name="state"
          type="byte[]"
          jni-type="[B" />
        <parameter
          name="callbacks"
          type="com.cossacklabs.themis.ISessionCallbacks"
          jni-type="Lcom/cossacklabs/themis/ISessionCallbacks;" />
        <exception
          name="com/cossacklabs/themis/SecureSessionException"
          type="com.cossacklabs.themis.SecureSessionException"
          type-generic-aware="com.cossacklabs.themis.SecureSessionException" />
      </method>
      <method
        abstract="false"
        deprecated="deprecated"
        final="false"
        name="save"
        native="false"
        return="byte[]"
        jni-return="[B"
        static="false"
        synchronized="true"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()[B" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="unwrap"
        native="false"
        return="com.cossacklabs.themis.SecureSession.UnwrapResult"
        jni-return="Lcom/cossacklabs/themis/SecureSession$UnwrapResult;"
        static="false"
        synchronized="true"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([B)Lcom/cossacklabs/themis/SecureSession$UnwrapResult;">
        <parameter
          name="wrappedData"
          type="byte[]"
          jni-type="[B" />
        <exception
          name="com/cossacklabs/themis/SecureSessionException"
          type="com.cossacklabs.themis.SecureSessionException"
          type-generic-aware="com.cossacklabs.themis.SecureSessionException" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="wrap"
        native="false"
        return="byte[]"
        jni-return="[B"
        static="false"
        synchronized="true"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([B)[B">
        <parameter
          name="data"
          type="byte[]"
          jni-type="[B" />
        <exception
          name="com/cossacklabs/themis/SecureSessionException"
          type="com.cossacklabs.themis.SecureSessionException"
          type-generic-aware="com.cossacklabs.themis.SecureSessionException" />
      </method>
      <field
        deprecated="not deprecated"
        final="false"
        name="callbacks"
        static="false"
        synthetic="false"
        transient="false"
        type="com.cossacklabs.themis.ISessionCallbacks"
        type-generic-aware="com.cossacklabs.themis.ISessionCallbacks"
        jni-signature="Lcom/cossacklabs/themis/ISessionCallbacks;"
        visibility="protected"
        volatile="false" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/cossacklabs/themis/SecureSession;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="SecureSession.1"
      jni-signature="Lcom/cossacklabs/themis/SecureSession$1;"
      source-file-name="SecureSession.java"
      static="true"
      visibility="" />
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Enum;"
      extends="java.lang.Enum"
      extends-generic-aware="java.lang.Enum&lt;com.cossacklabs.themis.SecureSession.SessionDataType&gt;"
      final="true"
      name="SecureSession.SessionDataType"
      jni-signature="Lcom/cossacklabs/themis/SecureSession$SessionDataType;"
      source-file-name="SecureSession.java"
      static="true"
      visibility="public">
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="fromByte"
        native="false"
        return="com.cossacklabs.themis.SecureSession.SessionDataType"
        jni-return="Lcom/cossacklabs/themis/SecureSession$SessionDataType;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(B)Lcom/cossacklabs/themis/SecureSession$SessionDataType;">
        <parameter
          name="src"
          type="byte"
          jni-type="B" />
        <exception
          name="com/cossacklabs/themis/SecureSessionException"
          type="com.cossacklabs.themis.SecureSessionException"
          type-generic-aware="com.cossacklabs.themis.SecureSessionException" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="valueOf"
        native="false"
        return="com.cossacklabs.themis.SecureSession.SessionDataType"
        jni-return="Lcom/cossacklabs/themis/SecureSession$SessionDataType;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/String;)Lcom/cossacklabs/themis/SecureSession$SessionDataType;">
        <parameter
          name="name"
          type="java.lang.String"
          jni-type="Ljava/lang/String;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="values"
        native="false"
        return="com.cossacklabs.themis.SecureSession.SessionDataType[]"
        jni-return="[Lcom/cossacklabs/themis/SecureSession$SessionDataType;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()[Lcom/cossacklabs/themis/SecureSession$SessionDataType;" />
      <field
        deprecated="not deprecated"
        final="true"
        name="NO_DATA"
        static="true"
        synthetic="false"
        transient="false"
        type="com.cossacklabs.themis.SecureSession.SessionDataType"
        type-generic-aware="com.cossacklabs.themis.SecureSession.SessionDataType"
        jni-signature="Lcom/cossacklabs/themis/SecureSession$SessionDataType;"
        visibility="public"
        volatile="false" />
      <field
        deprecated="not deprecated"
        final="true"
        name="PROTOCOL_DATA"
        static="true"
        synthetic="false"
        transient="false"
        type="com.cossacklabs.themis.SecureSession.SessionDataType"
        type-generic-aware="com.cossacklabs.themis.SecureSession.SessionDataType"
        jni-signature="Lcom/cossacklabs/themis/SecureSession$SessionDataType;"
        visibility="public"
        volatile="false" />
      <field
        deprecated="not deprecated"
        final="true"
        name="USER_DATA"
        static="true"
        synthetic="false"
        transient="false"
        type="com.cossacklabs.themis.SecureSession.SessionDataType"
        type-generic-aware="com.cossacklabs.themis.SecureSession.SessionDataType"
        jni-signature="Lcom/cossacklabs/themis/SecureSession$SessionDataType;"
        visibility="public"
        volatile="false" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Enum;"
      extends="java.lang.Enum"
      extends-generic-aware="java.lang.Enum&lt;com.cossacklabs.themis.SecureSession.State&gt;"
      final="true"
      name="SecureSession.State"
      jni-signature="Lcom/cossacklabs/themis/SecureSession$State;"
      source-file-name="SecureSession.java"
      static="true"
      visibility="public">
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="valueOf"
        native="false"
        return="com.cossacklabs.themis.SecureSession.State"
        jni-return="Lcom/cossacklabs/themis/SecureSession$State;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/String;)Lcom/cossacklabs/themis/SecureSession$State;">
        <parameter
          name="name"
          type="java.lang.String"
          jni-type="Ljava/lang/String;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="values"
        native="false"
        return="com.cossacklabs.themis.SecureSession.State[]"
        jni-return="[Lcom/cossacklabs/themis/SecureSession$State;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()[Lcom/cossacklabs/themis/SecureSession$State;" />
      <field
        deprecated="not deprecated"
        final="true"
        name="ESTABLISHED"
        static="true"
        synthetic="false"
        transient="false"
        type="com.cossacklabs.themis.SecureSession.State"
        type-generic-aware="com.cossacklabs.themis.SecureSession.State"
        jni-signature="Lcom/cossacklabs/themis/SecureSession$State;"
        visibility="public"
        volatile="false" />
      <field
        deprecated="not deprecated"
        final="true"
        name="IDLE"
        static="true"
        synthetic="false"
        transient="false"
        type="com.cossacklabs.themis.SecureSession.State"
        type-generic-aware="com.cossacklabs.themis.SecureSession.State"
        jni-signature="Lcom/cossacklabs/themis/SecureSession$State;"
        visibility="public"
        volatile="false" />
      <field
        deprecated="not deprecated"
        final="true"
        name="NEGOTIATING"
        static="true"
        synthetic="false"
        transient="false"
        type="com.cossacklabs.themis.SecureSession.State"
        type-generic-aware="com.cossacklabs.themis.SecureSession.State"
        jni-signature="Lcom/cossacklabs/themis/SecureSession$State;"
        visibility="public"
        volatile="false" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="SecureSession.UnwrapResult"
      jni-signature="Lcom/cossacklabs/themis/SecureSession$UnwrapResult;"
      source-file-name="SecureSession.java"
      static="false"
      visibility="public">
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="getData"
        native="false"
        return="byte[]"
        jni-return="[B"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()[B" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="getDataType"
        native="false"
        return="com.cossacklabs.themis.SecureSession.SessionDataType"
        jni-return="Lcom/cossacklabs/themis/SecureSession$SessionDataType;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/cossacklabs/themis/SecureSession$SessionDataType;" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Exception;"
      extends="java.lang.Exception"
      extends-generic-aware="java.lang.Exception"
      final="false"
      name="SecureSessionException"
      jni-signature="Lcom/cossacklabs/themis/SecureSessionException;"
      source-file-name="SecureSessionException.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="SecureSessionException"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
      <constructor
        deprecated="not deprecated"
        final="false"
        name="SecureSessionException"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/String;)V">
        <parameter
          name="message"
          type="java.lang.String"
          jni-type="Ljava/lang/String;" />
      </constructor>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/net/Socket;"
      extends="java.net.Socket"
      extends-generic-aware="java.net.Socket"
      final="false"
      name="SecureSocket"
      jni-signature="Lcom/cossacklabs/themis/SecureSocket;"
      source-file-name="SecureSocket.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="SecureSocket"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/net/InetAddress;I[BLcom/cossacklabs/themis/PrivateKey;Lcom/cossacklabs/themis/ISessionCallbacks;)V">
        <parameter
          name="dstAddress"
          type="java.net.InetAddress"
          jni-type="Ljava/net/InetAddress;" />
        <parameter
          name="dstPort"
          type="int"
          jni-type="I" />
        <parameter
          name="id"
          type="byte[]"
          jni-type="[B" />
        <parameter
          name="signPrivateKey"
          type="com.cossacklabs.themis.PrivateKey"
          jni-type="Lcom/cossacklabs/themis/PrivateKey;" />
        <parameter
          name="callbacks"
          type="com.cossacklabs.themis.ISessionCallbacks"
          jni-type="Lcom/cossacklabs/themis/ISessionCallbacks;" />
        <exception
          name="java/io/IOException"
          type="java.io.IOException"
          type-generic-aware="java.io.IOException" />
      </constructor>
      <constructor
        deprecated="not deprecated"
        final="false"
        name="SecureSocket"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([BLcom/cossacklabs/themis/PrivateKey;Lcom/cossacklabs/themis/ISessionCallbacks;)V">
        <parameter
          name="id"
          type="byte[]"
          jni-type="[B" />
        <parameter
          name="signPrivateKey"
          type="com.cossacklabs.themis.PrivateKey"
          jni-type="Lcom/cossacklabs/themis/PrivateKey;" />
        <parameter
          name="callbacks"
          type="com.cossacklabs.themis.ISessionCallbacks"
          jni-type="Lcom/cossacklabs/themis/ISessionCallbacks;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="close"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()V">
        <exception
          name="java/io/IOException"
          type="java.io.IOException"
          type-generic-aware="java.io.IOException" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="connect"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/net/SocketAddress;)V">
        <parameter
          name="remoteAddr"
          type="java.net.SocketAddress"
          jni-type="Ljava/net/SocketAddress;" />
        <exception
          name="java/io/IOException"
          type="java.io.IOException"
          type-generic-aware="java.io.IOException" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="connect"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/net/SocketAddress;I)V">
        <parameter
          name="remoteAddr"
          type="java.net.SocketAddress"
          jni-type="Ljava/net/SocketAddress;" />
        <parameter
          name="timeout"
          type="int"
          jni-type="I" />
        <exception
          name="java/io/IOException"
          type="java.io.IOException"
          type-generic-aware="java.io.IOException" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="getInputStream"
        native="false"
        return="java.io.InputStream"
        jni-return="Ljava/io/InputStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Ljava/io/InputStream;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="getOutputStream"
        native="false"
        return="java.io.OutputStream"
        jni-return="Ljava/io/OutputStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Ljava/io/OutputStream;">
        <exception
          name="java/io/IOException"
          type="java.io.IOException"
          type-generic-aware="java.io.IOException" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/io/FilterInputStream;"
      extends="java.io.FilterInputStream"
      extends-generic-aware="java.io.FilterInputStream"
      final="false"
      name="SecureSocket.SecureInputStream"
      jni-signature="Lcom/cossacklabs/themis/SecureSocket$SecureInputStream;"
      source-file-name="SecureSocket.java"
      static="false"
      visibility="private">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="SecureSocket.SecureInputStream"
        static="false"
        visibility="protected"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/cossacklabs/themis/SecureSocket;Ljava/io/InputStream;Lcom/cossacklabs/themis/SecureSession;)V">
        <parameter
          name="in"
          type="java.io.InputStream"
          jni-type="Ljava/io/InputStream;" />
        <parameter
          name="session"
          type="com.cossacklabs.themis.SecureSession"
          jni-type="Lcom/cossacklabs/themis/SecureSession;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="read"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()I">
        <exception
          name="java/io/IOException"
          type="java.io.IOException"
          type-generic-aware="java.io.IOException" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="read"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([BII)I">
        <parameter
          name="buffer"
          type="byte[]"
          jni-type="[B" />
        <parameter
          name="byteOffset"
          type="int"
          jni-type="I" />
        <parameter
          name="byteCount"
          type="int"
          jni-type="I" />
        <exception
          name="java/io/IOException"
          type="java.io.IOException"
          type-generic-aware="java.io.IOException" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/io/FilterOutputStream;"
      extends="java.io.FilterOutputStream"
      extends-generic-aware="java.io.FilterOutputStream"
      final="false"
      name="SecureSocket.SecureOutputStream"
      jni-signature="Lcom/cossacklabs/themis/SecureSocket$SecureOutputStream;"
      source-file-name="SecureSocket.java"
      static="false"
      visibility="private">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="SecureSocket.SecureOutputStream"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/cossacklabs/themis/SecureSocket;Ljava/io/OutputStream;Lcom/cossacklabs/themis/SecureSession;)V">
        <parameter
          name="out"
          type="java.io.OutputStream"
          jni-type="Ljava/io/OutputStream;" />
        <parameter
          name="session"
          type="com.cossacklabs.themis.SecureSession"
          jni-type="Lcom/cossacklabs/themis/SecureSession;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="write"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(I)V">
        <parameter
          name="oneByte"
          type="int"
          jni-type="I" />
        <exception
          name="java/io/IOException"
          type="java.io.IOException"
          type-generic-aware="java.io.IOException" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="write"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([BII)V">
        <parameter
          name="buffer"
          type="byte[]"
          jni-type="[B" />
        <parameter
          name="offset"
          type="int"
          jni-type="I" />
        <parameter
          name="length"
          type="int"
          jni-type="I" />
        <exception
          name="java/io/IOException"
          type="java.io.IOException"
          type-generic-aware="java.io.IOException" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/cossacklabs/themis/SecureSession;"
      extends="com.cossacklabs.themis.SecureSession"
      extends-generic-aware="com.cossacklabs.themis.SecureSession"
      final="false"
      name="SecureTransportSession"
      jni-signature="Lcom/cossacklabs/themis/SecureTransportSession;"
      source-file-name="SecureTransportSession.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="SecureTransportSession"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/String;Lcom/cossacklabs/themis/PrivateKey;Lcom/cossacklabs/themis/ITransportSessionCallbacks;)V">
        <parameter
          name="id"
          type="java.lang.String"
          jni-type="Ljava/lang/String;" />
        <parameter
          name="signPrivateKey"
          type="com.cossacklabs.themis.PrivateKey"
          jni-type="Lcom/cossacklabs/themis/PrivateKey;" />
        <parameter
          name="callbacks"
          type="com.cossacklabs.themis.ITransportSessionCallbacks"
          jni-type="Lcom/cossacklabs/themis/ITransportSessionCallbacks;" />
      </constructor>
      <constructor
        deprecated="not deprecated"
        final="false"
        name="SecureTransportSession"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([BLcom/cossacklabs/themis/PrivateKey;Lcom/cossacklabs/themis/ITransportSessionCallbacks;)V">
        <parameter
          name="id"
          type="byte[]"
          jni-type="[B" />
        <parameter
          name="signPrivateKey"
          type="com.cossacklabs.themis.PrivateKey"
          jni-type="Lcom/cossacklabs/themis/PrivateKey;" />
        <parameter
          name="callbacks"
          type="com.cossacklabs.themis.ITransportSessionCallbacks"
          jni-type="Lcom/cossacklabs/themis/ITransportSessionCallbacks;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="connect"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="read"
        native="false"
        return="byte[]"
        jni-return="[B"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()[B">
        <exception
          name="com/cossacklabs/themis/SecureSessionException"
          type="com.cossacklabs.themis.SecureSessionException"
          type-generic-aware="com.cossacklabs.themis.SecureSessionException" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="write"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([B)V">
        <parameter
          name="data"
          type="byte[]"
          jni-type="[B" />
        <exception
          name="com/cossacklabs/themis/SecureSessionException"
          type="com.cossacklabs.themis.SecureSessionException"
          type-generic-aware="com.cossacklabs.themis.SecureSessionException" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/cossacklabs/themis/KeyBytes;"
      extends="com.cossacklabs.themis.KeyBytes"
      extends-generic-aware="com.cossacklabs.themis.KeyBytes"
      final="false"
      name="SymmetricKey"
      jni-signature="Lcom/cossacklabs/themis/SymmetricKey;"
      source-file-name="SymmetricKey.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="SymmetricKey"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
      <constructor
        deprecated="not deprecated"
        final="false"
        name="SymmetricKey"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([B)V">
        <parameter
          name="key"
          type="byte[]"
          jni-type="[B" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="toByteArray"
        native="false"
        return="byte[]"
        jni-return="[B"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="true"
        synthetic="true"
        jni-signature="()[B" />
    </class>
  </package>
</api>
